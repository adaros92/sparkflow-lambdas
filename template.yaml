AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SparkFlow EMR utilities

Resources:
  SparkflowLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service: [ lambda.amazonaws.com ]
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action: [ 'sqs:*', 'dynamodb:*', 'ec2:*', 'emr:*', 'elasticmapreduce:*', 'iam:*', 'cloudwatch:*']
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: SparkflowLambdaRole

  # Function for creating and deleting EMR clusters
  ClusterManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SparkflowClusterManager
      CodeUri: sparkflowemr
      Handler: cluster_manager.cluster_manager
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt SparkflowLambdaRole.Arn
      Environment:
        Variables:
          sparkflow_cluster_pool_db: "sparkflow_cluster_pools"
          sparkflow_clusters_db: "sparkflow_clusters"
          sparkflow_clusters_index_name: "ParentClusterPoolIndex"

  # Function for polling steps on EMR clusters
  StepPollerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SparkflowStepPoller
      CodeUri: sparkflowemr
      Handler: step_poller.step_poller
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt SparkflowLambdaRole.Arn
      Environment:
        Variables:
          sparkflow_step_db: "sparkflow_job_runs"
          sparkflow_steps_index_name: "SubmittedDateIndex"
          sparkflow_cluster_pool_db: "sparkflow_cluster_pools"
          sparkflow_clusters_db: "sparkflow_clusters"
          sparkflow_clusters_index_name: "ParentClusterPoolIndex"
          polling_date_range: "15"

  # Function for polling statuses of EMR clusters
  ClusterPollerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SparkflowClusterPoller
      CodeUri: sparkflowemr
      Handler: cluster_poller.cluster_poller
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt SparkflowLambdaRole.Arn
      Environment:
        Variables:
          sparkflow_step_db: "sparkflow_job_runs"
          sparkflow_steps_index_name: "SubmittedDateIndex"
          sparkflow_cluster_pool_db: "sparkflow_cluster_pools"
          sparkflow_clusters_db: "sparkflow_clusters"
          sparkflow_clusters_index_name: "ParentClusterPoolIndex"
          polling_date_range: "15"

  # Function for submitting steps
  StepManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SparkflowStepManager
      CodeUri: sparkflowemr
      Handler: step_manager.step_manager
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt SparkflowLambdaRole.Arn
      Environment:
        Variables:
          sparkflow_step_db: "sparkflow_job_runs"
          sparkflow_cluster_pool_db: "sparkflow_cluster_pools"
          sparkflow_clusters_db: "sparkflow_clusters"
          sparkflow_clusters_index_name: "ParentClusterPoolIndex"

  # Runs the StepPoller Lambda function on a schedule
  StepPollerSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(5 minutes)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt StepPollerFunction.Arn
          Id: "StepPollerScheduleV1"

  # Provides scheduler access to the Lambda
  PermissionForEventsToInvokeStepPoller:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref StepPollerFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt StepPollerSchedule.Arn

  # Runs the ClusterManager Lambda function on a schedule
  ClusterPollerSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(5 minutes)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt ClusterPollerFunction.Arn
          Id: "ClusterPollerScheduleV1"

  # Provides scheduler access to the Lambda
  PermissionForEventsToInvokeClusterPoller:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ClusterPollerFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ClusterPollerSchedule.Arn

  ## DynamoDB tables ###################################################

  # Keeps a record of transforms onboarded to the SpakFlow system
  TransformsDDB:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      SSESpecification:
        SSEEnabled: 'false'
      AttributeDefinitions:
        - AttributeName: 'transform_id'
          AttributeType: 'S'
        - AttributeName: 'update_date'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'transform_id'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: "LastUpdateIndex"
          KeySchema:
            - AttributeName: "update_date"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: "sparkflow_transforms"

  # Keeps a record of individual job runs that have executed
  JobsDDB:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      SSESpecification:
        SSEEnabled: 'false'
      AttributeDefinitions:
        - AttributeName: 'job_id'
          AttributeType: 'S'
        - AttributeName: 'transform_id'
          AttributeType: 'S'
        - AttributeName: 'submitted_date'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'job_id'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: "ParentTransformIndex"
          KeySchema:
            - AttributeName: "transform_id"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        - IndexName: "SubmittedDateIndex"
          KeySchema:
            - AttributeName: "submitted_date"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: "sparkflow_job_runs"

  # Keeps a record of EMR cluster pools created by SparkFlow
  ClusterPoolDDB:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      SSESpecification:
        SSEEnabled: 'false'
      AttributeDefinitions:
        - AttributeName: 'cluster_pool_id'
          AttributeType: 'S'
        - AttributeName: 'update_date'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'cluster_pool_id'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: "LastUpdatedPoolIndex"
          KeySchema:
            - AttributeName: "update_date"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: "sparkflow_cluster_pools"

  # Keeps a record of individual clusters under the pools created by SparkFlow
  ClustersDDB:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      SSESpecification:
        SSEEnabled: 'false'
      AttributeDefinitions:
        - AttributeName: 'cluster_id'
          AttributeType: 'S'
        - AttributeName: 'cluster_pool_id'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'cluster_id'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: "ParentClusterPoolIndex"
          KeySchema:
            - AttributeName: "cluster_pool_id"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: "sparkflow_clusters"
