AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SparkFlow EMR utilities

Resources:
  SparkflowLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service: [ lambda.amazonaws.com ]
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action: [ 'sqs:*', 'dynamodb:*', 'ec2:*' ]
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: SparkflowLambdaRole

  # Function for creating and deleting EMR clusters
  ClusterManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sparkflowemr/
      Handler: cluster_manager.cluster_manager
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt SparkflowLambdaRole.Arn
      Environment:
        Variables:
          sparkflow_cluster_pool_db: "sparkflow_cluster_pools"
          sparkflow_clusters_db: "sparkflow_clusters"

  # Function for polling steps on EMR clusters
  ClusterPollerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sparkflowemr/
      Handler: cluster_poller.cluster_poller
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt SparkflowLambdaRole.Arn
      Environment:
        Variables:
          sparkflow_step_db: "sparkflow_job_runs"
          sparkflow_cluster_pool_db: "sparkflow_cluster_pools"
          sparkflow_clusters_db: "sparkflow_clusters"

  # Function for submitting steps
  StepManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sparkflowemr/
      Handler: step_manager.step_manager
      Runtime: python3.7
      Timeout: 600
      Role: !GetAtt SparkflowLambdaRole.Arn
      Environment:
        Variables:
          sparkflow_step_db: "sparkflow_job_runs"

  # Runs the ClusterPoller Lambda function on a schedule
  ClusterPollerSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(5 minutes)"
      State: "DISABLED"
      Targets:
        - Arn: !GetAtt ClusterPollerFunction.Arn
          Id: "ClusterPollerScheduleV1"

  # Provides scheduler access to the Lambda
  PermissionForEventsToInvokeClusterPoller:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ClusterPollerFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ClusterPollerSchedule.Arn
